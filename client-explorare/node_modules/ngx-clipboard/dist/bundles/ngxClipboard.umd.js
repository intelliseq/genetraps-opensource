(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('clipboard')) :
	typeof define === 'function' && define.amd ? define(['exports', '@angular/core', 'clipboard'], factory) :
	(factory((global.ngx = global.ngx || {}, global.ngx.clipboard = global.ngx.clipboard || {}),global.ng.core,global.Clipboard));
}(this, (function (exports,_angular_core,Clipboard) { 'use strict';

var ClipboardDirective = (function () {
    /**
     * @param {?} elmRef
     */
    function ClipboardDirective(elmRef) {
        this.elmRef = elmRef;
        this.cbOnSuccess = new _angular_core.EventEmitter();
        this.cbOnError = new _angular_core.EventEmitter();
    }
    /**
     * @return {?}
     */
    ClipboardDirective.prototype.ngOnInit = function () {
        var _this = this;
        var /** @type {?} */ option;
        option = !!this.targetElm ? { target: function () { /** @type {?} */ return (_this.targetElm); } } : { text: function () { return _this.cbContent; } };
        this.clipboard = new Clipboard(this.elmRef.nativeElement, option);
        this.clipboard.on('success', function (e) { return _this.cbOnSuccess.emit(e); });
        this.clipboard.on('error', function (e) { return _this.cbOnError.emit(e); });
    };
    /**
     * @return {?}
     */
    ClipboardDirective.prototype.ngOnDestroy = function () {
        if (this.clipboard) {
            this.clipboard.destroy();
        }
    };
    return ClipboardDirective;
}());
ClipboardDirective.decorators = [
    { type: _angular_core.Directive, args: [{
                selector: '[ngxClipboard]'
            },] },
];
/**
 * @nocollapse
 */
ClipboardDirective.ctorParameters = function () { return [
    { type: _angular_core.ElementRef, },
]; };
ClipboardDirective.propDecorators = {
    'targetElm': [{ type: _angular_core.Input, args: ['ngxClipboard',] },],
    'cbContent': [{ type: _angular_core.Input },],
    'cbOnSuccess': [{ type: _angular_core.Output },],
    'cbOnError': [{ type: _angular_core.Output },],
};

var ClipboardModule = (function () {
    function ClipboardModule() {
    }
    return ClipboardModule;
}());
// static forRoot(): ModuleWithProviders { return { ngModule: ClipboardModule, providers: [] }; }
ClipboardModule.decorators = [
    { type: _angular_core.NgModule, args: [{
                declarations: [ClipboardDirective],
                exports: [ClipboardDirective]
            },] },
];
/**
 * @nocollapse
 */
ClipboardModule.ctorParameters = function () { return []; };

exports.ClipboardModule = ClipboardModule;
exports.ClipboardDirective = ClipboardDirective;

Object.defineProperty(exports, '__esModule', { value: true });

})));
