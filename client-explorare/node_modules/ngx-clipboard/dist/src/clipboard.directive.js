import { Directive, ElementRef, Input, Output, EventEmitter } from '@angular/core';
import * as Clipboard from 'clipboard';
export { Clipboard };
var ClipboardDirective = (function () {
    /**
     * @param {?} elmRef
     */
    function ClipboardDirective(elmRef) {
        this.elmRef = elmRef;
        this.cbOnSuccess = new EventEmitter();
        this.cbOnError = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ClipboardDirective.prototype.ngOnInit = function () {
        var _this = this;
        var /** @type {?} */ option;
        option = !!this.targetElm ? { target: function () { /** @type {?} */ return (_this.targetElm); } } : { text: function () { return _this.cbContent; } };
        this.clipboard = new Clipboard(this.elmRef.nativeElement, option);
        this.clipboard.on('success', function (e) { return _this.cbOnSuccess.emit(e); });
        this.clipboard.on('error', function (e) { return _this.cbOnError.emit(e); });
    };
    /**
     * @return {?}
     */
    ClipboardDirective.prototype.ngOnDestroy = function () {
        if (this.clipboard) {
            this.clipboard.destroy();
        }
    };
    return ClipboardDirective;
}());
export { ClipboardDirective };
ClipboardDirective.decorators = [
    { type: Directive, args: [{
                selector: '[ngxClipboard]'
            },] },
];
/**
 * @nocollapse
 */
ClipboardDirective.ctorParameters = function () { return [
    { type: ElementRef, },
]; };
ClipboardDirective.propDecorators = {
    'targetElm': [{ type: Input, args: ['ngxClipboard',] },],
    'cbContent': [{ type: Input },],
    'cbOnSuccess': [{ type: Output },],
    'cbOnError': [{ type: Output },],
};
function ClipboardDirective_tsickle_Closure_declarations() {
    /** @type {?} */
    ClipboardDirective.decorators;
    /**
     * @nocollapse
     * @type {?}
     */
    ClipboardDirective.ctorParameters;
    /** @type {?} */
    ClipboardDirective.propDecorators;
    /** @type {?} */
    ClipboardDirective.prototype.clipboard;
    /** @type {?} */
    ClipboardDirective.prototype.targetElm;
    /** @type {?} */
    ClipboardDirective.prototype.cbContent;
    /** @type {?} */
    ClipboardDirective.prototype.cbOnSuccess;
    /** @type {?} */
    ClipboardDirective.prototype.cbOnError;
    /** @type {?} */
    ClipboardDirective.prototype.elmRef;
}
//# sourceMappingURL=clipboard.directive.js.map